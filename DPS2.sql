SELECT * FROM EMP, DEPT
WHERE EMP.DEPTNO(+) = DEPT.DEPTNO 
UNION 
SELECT * FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO(+);

SELECT E.EMPNO, E.ENAME, E.SAL, E.MGR, M.ENAME, M.SAL
FROM EMP E , EMP M
WHERE E.MGR = M.EMPNO
AND E.SAL > M.SAL;

SELECT *
FROM EMP NATURAL JOIN DEPT;

SELECT * FROM EMP JOIN DEPT ON ( EMP.DEPTNO = DEPT.DEPTNO);

GRANT CONNECT, RESOURCE TO SYS;
SELECT * FROM TAB;




SELECT * FROM DUAL;

DESC DUAL;

SELECT * FROM EMP;

---VIEW SYNTAX
CREATE OR REPLACE VIEW MY_VIEW
AS
SELECT EMPNO, ENAME, SAL FROM EMP;


--INDEXES ARE ACTIVATED WHENEVER INDEXED COLUMN IS PLACED 
--IN WHERE CLASS OF SELECT STATEMENT


CREATE INDEX MY_INDEX ON EMP(EMPNO);

SELECT * FROM USER_INDEXES;

--SYNONYMS 
CREATE SYNONYM MY_SYN FOR EMP; --PRIVATE SYNONYM
CREATE PUBLIC SYNONYM MY_SYN FOR EMP; --PUBLIC SYNONYM

---ROLE: COLLECTION OF DIFFERENT OBJECT PREVILIGES ON DIFFERENT
--DATABASE OBJECTS


CREATE ROLE MY_ROLE ;

GRANT SELECT, INSERT ON EMP TO  MY_ROLE;

GRANT SELECT, INSERT ON EMP TO C##SURYA;

GRANT MY_ROLE TO USER_NAME;


--OBJECTS
CREATE OR REPLACE TYPE ADDR_OBJ12 AS OBJECT
(HNO VARCHAR2(10),
STREET VARCHAR2(10),
CITY VARCHAR2(10),
PINCODE NUMBER(6)
);
/

DESC ADDR_OBJ12;

CREATE TABLE  EMPLOY_12(
    EMPID NUMBER(2),
    ENAME VARCHAR2(20),
    ADDRESS ADDR_OBJ,
    MOBILENO NUMBER(10)
    );
    
INSERT INTO EMPLOY_12
VALUES( 11, 'KING', 
ADDR_OBJ('201','AMEERPET','SEC','500016'), 
7331121345);

SELECT * FROM EMPLOY_12;

UPDATE EMPLOY_12 E
SET E.ADDRESS.CITY='HYD' WHERE E.EMPID = 11;

--OBJECT METHODS
CREATE OR REPLACE TYPE MARKS_OBJ AS OBJECT (
MATHS NUMBER(5,2),
PHYSICS NUMBER(5,2),
CHEM NUMBER(5,2),
MEMBER FUNCTION TOT RETURN NUMBER,
MEMBER FUNCTION RES RETURN  VARCHAR2
);
/



--METHOD DEFINITIONS
CREATE OR REPLACE TYPE BODY MARKS_OBJ 
AS MEMBER FUNCTION TOT RETURN NUMBER IS 
BEGIN 
RETURN (MATHS+PHYSICS+CHEM);
END TOT;
MEMBER FUNCTION RES RETURN VARCHAR2 IS
T NUMBER;
BEGIN
T:= MATHS+PHYSICS_CHEM;
IF MATHS <35 OR PHYSICS < 35 OR CHEM < 35 THEN
RETURN ('FAIL');
ELSIF T >= 180 THEN 
RETURN ('GRADE A');
ELSIF T >= 150 THEN 
RETURN ('GRADE B');
ELSIF T >=120 THEN 
RETURN ('GRADE C');
ELSE
RETURN ('GRADE D');
END IF;
END RES;
END;
/
-----rollup(COLUMN_NAME) - DISPLAY SUBTOTALS AND GRAND TOTALS

--DECODE - IF THEN ELSE
SELECT DECODE(MOD(&NUM,2), 0, 'EVEN', 1, 'ODD','ENTER VALID NUMBER')
FROM DUAL;

SELECT EMPNO, ENAME,SAL,DENSE_RANK() OVER (ORDER BY SAL DESC ) AS RNK 
FROM EMP;


--sql CORRELATED SUBQUERIES

--HIGHEST PAID EMPLOYEE DETAILS FOR EACH GRADE BY DEPTNO

SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E, SAL_GRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY S.GRADE;


SELECT E1.ENAME, E1.SAL, S.GRADE 
FROM EMP E1, SAL_GRADE S
WHERE (E1.SAL,S.GRADE) IN 
(SELECT MAX(SAL),S2.GRADE 
FROM EMP E2, SAL_GRADE S2 
GROUP BY S2.GRADE);



SELECT E.ENAME,E.SAL, S.GRADE, E.DEPTNO
FROM EMP E, SAL_GRADE S
WHERE (E.SAL,S.GRADE) IN (SELECT MAX(SAL), S1.GRADE 
FROM EMP, SAL_GRADE S1
WHERE EMP.SAL BETWEEN S1.LOSAL AND S1.HISAL
GROUP BY S1.GRADE)
ORDER BY E.DEPTNO;

--UNDERSTANDING CORELATED SUBQUERIES
--FOR EVERY ROW IN OUTER QUERY , ALL ROWS OF INNER QUERIES ARE COMPARED

SELECT * 
FROM EMP E
WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE
DEPTNO = E.DEPTNO
GROUP BY DEPTNO);

SELECT ENAME, DEPTNO, SAL, GRADE 
FROM EMP E, SAL_GRADE S
WHERE (SAL, GRADE, DEPTNO) IN 
(SELECT MAX(SAL), GRADE, DEPTNO
FROM EMP E1, SAL_GRADE S1
WHERE SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY GRADE,DEPTNO)
ORDER BY DEPTNO;

SELECT E.ENAME, D.LOC, TRUNC(MONTHS_BETWEEN(SYSDATE,E.HIREDATE)/12,4) AS EXP
FROM EMP E, DEPT D
WHERE (MONTHS_BETWEEN(SYSDATE,E.HIREDATE), D.LOC) IN 
(SELECT MAX(MONTHS_BETWEEN(SYSDATE,E1.HIREDATE)), D1.LOC
FROM EMP E1, DEPT D1
WHERE E1.DEPTNO = D1.DEPTNO
GROUP BY D1.LOC);

SELECT E.ENAME, D.DEPTNO, TRUNC(MONTHS_BETWEEN(SYSDATE,E.HIREDATE)/12,4) AS EXP
FROM EMP E, DEPT D
WHERE (MONTHS_BETWEEN(SYSDATE,E.HIREDATE), D.DEPTNO) IN 
(SELECT MAX(MONTHS_BETWEEN(SYSDATE,E1.HIREDATE)), D1.DEPTNO
FROM EMP E1, DEPT D1
WHERE E1.DEPTNO = D1.DEPTNO AND JOB='MANAGER'
GROUP BY D1.DEPTNO);

SELECT * FROM EMP
WHERE JOB='MANAGER';

SELECT * FROM EMP 
WHERE (SAL, JOB, DEPTNO) IN (SELECT MIN(SAL), JOB, DEPTNO
FROM EMP
GROUP BY JOB,DEPTNO
)ORDER BY DEPTNO;

SELECT SAL, JOB, DEPTNO FROM EMP ORDER BY DEPTNO;
SELECT DISTINCT JOB FROM EMP;

CLERK
SALESMAN
ANALYST
MANAGER
PRESIDENT

2650	MANAGER	10
5200	PRESIDENT	10
1500	CLERK	10
3175	MANAGER	20
3200	ANALYST	20
1300	CLERK	20
1000	CLERK	20
3200	ANALYST	20
1450	SALESMAN	30
1700	SALESMAN	30
1800	SALESMAN	30
1150	CLERK	30
3050	MANAGER	30
1450	SALESMAN	30



SELECT ENAME, DEPTNO, SAL, GRADE 
FROM EMP E, SAL_GRADE S
WHERE (SAL, GRADE, DEPTNO) IN 
(SELECT MAX(SAL), GRADE, DEPTNO
FROM EMP E1, SAL_GRADE S1
WHERE E1.SAL BETWEEN S1.LOSAL AND S1.HISAL
GROUP BY GRADE,DEPTNO)
ORDER BY DEPTNO;

SELECT ENAME, LOC, HIREDATE 
FROM EMP, DEPT
WHERE (HIREDATE, LOC) IN (SELECT MIN(HIREDATE), LOC 
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
GROUP BY LOC);

SELECT E.ENAME, D.LOC, TRUNC(MONTHS_BETWEEN(SYSDATE,E.HIREDATE)/12,4) AS EXP
FROM EMP E, DEPT D
WHERE (MONTHS_BETWEEN(SYSDATE,E.HIREDATE), D.LOC) IN 
(SELECT MAX(MONTHS_BETWEEN(SYSDATE,E1.HIREDATE)), D1.LOC
FROM EMP E1, DEPT D1
WHERE E1.DEPTNO = D1.DEPTNO
GROUP BY D1.LOC);

SMITH	DALLAS	17-DEC-80
ALLEN	CHICAGO	20-FEB-81
CLARK	NEW YORK	09-JUN-81


SELECT E1.*
FROM EMP E1
WHERE E1.SAL > (SELECT AVG(SAL) FROM EMP E2
WHERE E2.JOB = E1.JOB) AND E1.SAL > (SELECT AVG(SAL) FROM EMP E3
WHERE E3.DEPTNO = E1.DEPTNO);

SELECT AVG(SAL), JOB
FROM EMP
GROUP BY JOB;

1237.5	CLERK               
1600	SALESMAN            3116.66	10
3200	ANALYST             2375	20
2958.33	MANAGER             1766.66	30
5200	PRESIDENT


SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP ORDER BY DEPTNO;

SELECT AVG(SAL), DEPTNO
FROM EMP
GROUP BY DEPTNO;

1766.66	30
3116.66	10
2375	20;


SELECT E.ENAME, E.DEPTNO, E.HIREDATE
FROM EMP E
WHERE (E.HIREDATE) IN 
(SELECT MIN(E1.HIREDATE)
FROM EMP E1
WHERE E1.DEPTNO = E.DEPTNO  AND JOB='MANAGER' );

SELECT E.ENAME, D.DEPTNO, TRUNC(MONTHS_BETWEEN(SYSDATE,E.HIREDATE)/12,4) AS EXP
FROM EMP E, DEPT D
WHERE (MONTHS_BETWEEN(SYSDATE,E.HIREDATE), D.DEPTNO) IN 
(SELECT MAX(MONTHS_BETWEEN(SYSDATE,E1.HIREDATE)), D1.DEPTNO
FROM EMP E1, DEPT D1
WHERE E1.DEPTNO = D1.DEPTNO AND JOB='MANAGER'
GROUP BY D1.DEPTNO);

SELECT * FROM EMP;

--DISPLAY YEAR WISE HIGHEST PAID EMPLOYEES

SELECT * 
FROM EMP E1
WHERE SAL IN ( SELECT MAX(SAL)
FROM EMP E2
WHERE TO_CHAR(HIREDATE,'YYYY') = TO_CHAR(E1.HIREDATE, 'YYYY')
) ORDER BY HIREDATE;

SELECT ENAME, SAL, TO_CHAR(HIREDATE,'YYYY')
FROM EMP
ORDER BY HIREDATE;

--DISPLAY HIGHEST PAID EMPLOYEE DETAILS FOR EACH GRADE BY DEPTNO

SELECT EMPNO, ENAME, SAL, GRADE, DEPTNO
FROM EMP E, SAL_GRADE S
WHERE SAL IN (SELECT MAX(SAL) FROM EMP E1, SAL_GRADE S1
WHERE SAL BETWEEN S1.LOSAL AND S1.HISAL AND S1.GRADE = S.GRADE AND E1.DEPTNO = E.DEPTNO)
ORDER BY DEPTNO;

7782	CLARK	2650	4	10
7839	KING	5200	5	10
7934	MILLER	1500	3	10
7369	SMITH	1000	1	20
7788	ARCHANA	3200	5	20
7876	ADAMS	1300	2	20
7902	HEMANTH	3200	5	20
7499	ALLEN	1800	3	30
7698	BLAKE	3050	5	30
7900	JAMES	1150	1	30

SELECT ENAME, DEPTNO, SAL, GRADE 
FROM EMP E, SAL_GRADE S
WHERE (SAL, GRADE, DEPTNO) IN 
(SELECT MAX(SAL), GRADE, DEPTNO
FROM EMP E1, SAL_GRADE S1
WHERE E1.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY GRADE,DEPTNO)
ORDER BY DEPTNO;

--
SELECT E.EMPNO, E.ENAME, E.HIREDATE, E.DEPTNO, D.LOC
FROM EMP E,DEPT D
WHERE SAL IN (SELECT MAX(SAL) FROM EMP E1, DEPT D1
WHERE D1.LOC = D.LOC AND E1.DEPTNO = D1.DEPTNO AND
TO_CHAR(E1.HIREDATE,'YYYY') = TO_CHAR(E.HIREDATE,'YYYY'))
ORDER BY LOC; 

---MGR WISE HIGHEST PAID EMPLOYEES
SELECT * 
FROM EMP E
WHERE (SAL) IN (SELECT MAX(SAL)
FROM EMP E1
WHERE E1.MGR = E.MGR)
ORDER BY MGR;

SELECT * FROM EMP ORDER BY MGR;

---FIRST EMPLOYEE JOINED FOR EACH MANAGER
SELECT * 
FROM EMP E 
WHERE (HIREDATE) IN (SELECT MIN(HIREDATE)
FROM EMP E1
WHERE E1.MGR = E.MGR)
ORDER BY MGR;

	7566	20-FEB-81	1800	300	30
	7698	22-FEB-81	1450	500	30
	7782	23-JAN-82	1500		10
	7788	12-JAN-83	1300		20
	7839	02-APR-81	3175		20
	7902	17-DEC-80	1000		20


SELECT * FROM EMP ORDER BY MGR;

UPDATE EMP
SET ENAME= UPPER(ENAME)
WHERE ENAME = 'JAMES';

SELECT * FROM EMP;

UPDATE EMP
SET SAL = SAL-0.2*SAL;

ROLLBACK EMP BEFORE UPDATE;

COMMIT;


UPDATE EMP
SET DEPTNO = 10 , SAL = SAL+500 , MGR=7839
WHERE DEPTNO = 20 AND JOB = 'CLERK';

SELECT * FROM EMP;

ROLLBACK EMP BEFORE UPDATE;

COMMIT;

SELECT TO_CHAR(TO_DATE('19-OCT-1845','DD-MON-YYYY'),'CC') FROM DUAL;


UPDATE EMP
SET HIREDATE = TO_DATE(
REPLACE(TO_CHAR(HIREDATE,'CC'),20, 19) 
|| TO_CHAR(HIREDATE,'YY-') 
|| TO_CHAR(HIREDATE,'DD-MM'),'YYYY-DD-MM');

SELECT EMP.*,TO_CHAR(HIREDATE, 'DD-MM-YYYY') FROM EMP;

ROLLBACK EMP BEFORE DELETE;

DELETE FROM EMP;

COMMIT;

SELECT GRADE FROM EMP,SAL_GRADE
WHERE EMP.SAL BETWEEN SAL_GRADE.LOSAL AND SAL_GRADE.HISAL;

UPDATE EMP
SET SAL = SAL + 0.1*SAL
WHERE EMPNO IN (SELECT EMPNO FROM EMP,SAL_GRADE
WHERE EMP.SAL BETWEEN SAL_GRADE.LOSAL AND SAL_GRADE.HISAL
AND GRADE = 3);

SELECT * FROM EMP;

ROLLBACK EMP BEFORE UPDATE;

SELECT ENAME,SAL, GRADE
FROM EMP, SAL_GRADE
WHERE EMP.SAL BETWEEN SAL_GRADE.LOSAL AND SAL_GRADE.HISAL;


SELECT REPLACE(TO_CHAR(HIREDATE,'CC'),20, 19) FROM EMP;


COMMIT;


UPDATE EMP
SET SAL = SAL + 0.1 * SAL, DEPTNO = (SELECT DEPTNO FROM DEPT WHERE DNAME='SALES')
WHERE JOB = 'CLERK' AND DEPTNO = (SELECT DEPTNO FROM DEPT WHERE DNAME='RESEARCH');

ROLLBACK EMP BEFORE DELETE;

COMMIT;


SELECT* FROM EMP;

SELECT AVG(SAL) FROM EMP;


UPDATE EMP
SET SAL = (SELECT ROUND(AVG(SAL)) FROM EMP)
WHERE SAL = (SELECT MIN(SAL) FROM EMP);

SELECT * FROM EMP;


DELETE FROM EMP
WHERE MGR = 7839 AND ENAME <> 'JONES';

ROLLBACK EMP BEFORE DELETE;










